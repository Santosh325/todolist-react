{"version":3,"sources":["firebase.js","Todo.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Todo","props","List","ListItem","ListItemAvatar","ListItemText","primary","todo","secondary","onClick","event","collection","doc","id","delete","App","useState","todos","setTodos","input","setInput","useEffect","console","log","orderBy","onSnapshot","snapshot","docs","map","data","className","FormControl","InputLabel","Input","type","value","onChange","target","Button","disabled","preventDefault","add","timestamp","FieldValue","serverTimestamp","variant","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4SAaMA,EAVcC,IAASC,cAAc,CACvCC,OAAQ,0CACRC,WAAY,uCACZC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGIC,Y,QCKRC,MAdf,SAAcC,GACV,OACG,eAACC,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,IAGI,cAACC,EAAA,EAAD,CAAcC,QAASL,EAAMM,KAAKA,KAAMC,UAAU,YAEzD,cAAC,IAAD,CAAmBC,QAAU,SAAAC,GAAK,OAAIrB,EAAGsB,WAAW,SAASC,IAAIX,EAAMM,KAAKM,IAAIC,gBCyCzEC,MA/Cf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAmBA,OAjBAC,qBAAU,WACRC,QAAQC,IAAI,gBAAM,SACjBlC,EAAGsB,WAAW,SAASa,QAAQ,YAAY,QAAQC,YAAW,SAAAC,GAC5DR,EAASQ,EAASC,KAAKC,KAAI,SAAAhB,GAAG,MAAK,CAACC,GAAID,EAAIC,GAAIN,KAAMK,EAAIiB,OAAOtB,eAEnE,CAACY,IAaF,sBAAKW,UAAU,MAAf,UACE,6CACA,iCAEA,eAACC,EAAA,EAAD,WACC,cAACC,EAAA,EAAD,gCACA,cAACC,EAAA,EAAD,CAAOC,KAAK,OAAOC,MAAOhB,EAAOiB,SAAW,SAAA1B,GAAK,OAAIU,EAASV,EAAM2B,OAAOF,aAE5E,cAACG,EAAA,EAAD,CAAQC,UAAWpB,EAAOe,KAAK,SAASzB,QAlB3B,SAACC,GAChBA,EAAM8B,iBACNnD,EAAGsB,WAAW,SAAS8B,IAAI,CACzBlC,KAAMY,EACNuB,UAAWpD,IAASS,UAAU4C,WAAWC,oBAE3CxB,EAAS,KAYoDyB,QAAQ,YAAYC,MAAM,UAArF,0BAKA,6BAEG7B,EAAMW,KAAI,SAAArB,GAAI,OACZ,cAAC,EAAD,CAAMA,KAAMA,aCjCRwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.64781250.chunk.js","sourcesContent":["// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyAuBfSKJpK3jwEtzWzgLkXm3U1d7azPvHk\",\n    authDomain: \"todo-app-react-bb231.firebaseapp.com\",\n    projectId: \"todo-app-react-bb231\",\n    storageBucket: \"todo-app-react-bb231.appspot.com\",\n    messagingSenderId: \"322471779140\",\n    appId: \"1:322471779140:web:0f809532cfa5357ba3d511\",\n    measurementId: \"G-F0249EM4TH\"\n});\n\nconst db = firebaseApp.firestore();\n\nexport {db};","import React from 'react'\nimport {  List, ListItem, ListItemText, ListItemAvatar} from '@material-ui/core';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport {db} from './firebase';\nfunction Todo(props) {\n    return (\n       <List>\n           <ListItem>\n           <ListItemAvatar>\n\n           </ListItemAvatar>\n               <ListItemText primary={props.todo.todo} secondary=\"Todo\"/>\n           </ListItem>\n        <DeleteForeverIcon onClick= {event => db.collection('todos').doc(props.todo.id).delete()}/>\n       </List>\n    )\n}\n\nexport default Todo\n","import React, {useState, useEffect} from 'react';\nimport { Button , FormControl, Input, InputLabel} from '@material-ui/core';\n\nimport './App.css';\nimport Todo from './Todo.js';\nimport { db } from './firebase';\nimport firebase from 'firebase';\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [input, setInput] = useState('');\n\n  useEffect(() => {\n    console.log('ðŸ‘¾ ','hello');\n     db.collection('todos').orderBy('timestamp','desc').onSnapshot(snapshot => {\n       setTodos(snapshot.docs.map(doc => ({id: doc.id, todo: doc.data().todo})))\n     })\n  }, [input])\n  \n  // event handler\n  const addTodos = (event) => {\n    event.preventDefault();\n    db.collection('todos').add({\n      todo: input,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    })\n    setInput('');\n  }\n  \n  return (\n    <div className=\"App\">\n      <h1>Hello world</h1>\n      <form>\n     \n      <FormControl>\n       <InputLabel > write todo here!</InputLabel>\n       <Input type=\"text\" value={input} onChange={ event => setInput(event.target.value)}/>\n      </FormControl>\n      <Button disabled={!input} type=\"submit\" onClick={addTodos} variant=\"contained\" color=\"primary\">\n  Add Todos\n</Button>\n      </form>\n\n      <ul>\n        {\n         todos.map(todo => (\n           <Todo todo={todo}/>\n         ))\n        }\n     \n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}